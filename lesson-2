{"cells":[{"metadata":{},"cell_type":"markdown","source":"# Welcome to Jupyter!"},{"metadata":{"trusted":true},"cell_type":"code","source":"print (\"1. Вероятность того, что стрелок попадет в мишень, выстрелив один раз, равна 0.8. Стрелок выстрелил 100 раз. Найдите вероятность того, что стрелок попадет в цель ровно 85 раз.\")\nfrom math import factorial\ndef combinations(n, k):\n    return int(factorial(n) / (factorial(k) * factorial(n - k)))\nn = 100\nk = 85\np = 0.8\nq = 0.2\nX = combinations(n, k) * (p ** k) * (1 - p) ** (n - k)\nX","execution_count":3,"outputs":[{"output_type":"stream","text":"1. Вероятность того, что стрелок попадет в мишень, выстрелив один раз, равна 0.8. Стрелок выстрелил 100 раз. Найдите вероятность того, что стрелок попадет в цель ровно 85 раз.\n","name":"stdout"},{"output_type":"execute_result","execution_count":3,"data":{"text/plain":"0.048061793700746355"},"metadata":{}}]},{"metadata":{"trusted":true},"cell_type":"code","source":"print (\"2. Вероятность того, что лампочка перегорит в течение первого дня эксплуатации, равна 0.0004. В жилом комплексе после ремонта в один день включили 5000 новых лампочек. Какова вероятность, что ни одна из них не перегорит в первый день? Какова вероятность, что перегорят ровно две?\")\n\nfrom math import factorial\nimport numpy as np\ndef combinations(n, k):\n    return int(factorial(n) / (factorial(k) * factorial(n - k)))\n\nn = 5000\np = 0.0004\nlambda_ = n * p\nm1 = 0\nm2 = 2\n\nX1 = (lambda_**m1 / np.math.factorial(m1)) * np.exp(-lambda_)\nprint (X1)\n\nX2 = (lambda_**m2 / np.math.factorial(m2)) * np.exp(-lambda_)\nprint (X2)","execution_count":6,"outputs":[{"output_type":"stream","text":"2. Вероятность того, что лампочка перегорит в течение первого дня эксплуатации, равна 0.0004. В жилом комплексе после ремонта в один день включили 5000 новых лампочек. Какова вероятность, что ни одна из них не перегорит в первый день? Какова вероятность, что перегорят ровно две?\n0.1353352832366127\n0.2706705664732254\n","name":"stdout"}]},{"metadata":{"trusted":true},"cell_type":"code","source":"print (\"3. Монету подбросили 144 раза. Какова вероятность, что орел выпадет ровно 70 раз?\")\nfrom math import factorial\nimport numpy as np\ndef combinations(n, k):\n    return int(factorial(n) / (factorial(k) * factorial(n - k)))\n\nn = 144\nk = 70\np = 0.5\nq = 0.5\nX = combinations(n, k) * (p ** k) * (1 - p) ** (n - k)\nX      ","execution_count":8,"outputs":[{"output_type":"stream","text":"3. Монету подбросили 144 раза. Какова вероятность, что орел выпадет ровно 70 раз?\n","name":"stdout"},{"output_type":"execute_result","execution_count":8,"data":{"text/plain":"0.06281178035144776"},"metadata":{}}]},{"metadata":{"trusted":true},"cell_type":"code","source":"print (\"4. В первом ящике находится 10 мячей, из которых 7 - белые. Во втором ящике - 11 мячей, из которых 9 белых. Из каждого ящика вытаскивают случайным образом по два мяча. Какова вероятность того, что все мячи белые? Какова вероятность того, что ровно два мяча белые? Какова вероятность того, что хотя бы один мяч белый?\")\nfrom math import factorial\nimport numpy as np\ndef combinations(n, k):\n    return int(factorial(n) / (factorial(k) * factorial(n - k)))\n\nprint (\"Какова вероятность того, что все мячи белые?\")\nX1 = (combinations(7,2)/combinations(10,2))*(combinations(9,2)/combinations(11,2))\nprint (X1)\n\nprint (\"Какова вероятность того, что ровно два мяча белые?\")\n## Рассмотрим все возможные положительные исходы данного события и найдем их вероятности, так как эти события не могут наступить одновременно значит вероятности будут складываться.\n## 1 положительный исход. Из первого ящика достают два белых мяча из второго два черных.\nP1 = (combinations(7,2)/combinations(10,2))*(combinations(2,2)/combinations(11,2))\n## 2 положительный исход. Из первого ящика достают два черных мяча из второго два белых.\nP2 = (combinations(3,2)/combinations(10,2))*(combinations(9,2)/combinations(11,2))\n## 3 положительный исход. Из каждого ящика достают по два мяча 1 белый и 1 черный.\nP3 = ((combinations(7,1)*combinations(3,1)/combinations(10,2))*(combinations(9,1)*combinations(2,1)/combinations(11,2)))\nP=P1+P2+P3\nprint (P)\n\nprint (\"Какова вероятность того, что хотя бы один мяч белый?\")\n## Пойдем от обратного! Из общей вероятности = 1 вычтим вероятность случая, когда все вытянутые мячи черные\nX3 = 1 - (combinations(3,2)/combinations(10,2))*(combinations(2,2)/combinations(11,2))\nprint (X3)\n","execution_count":1,"outputs":[{"output_type":"stream","text":"4. В первом ящике находится 10 мячей, из которых 7 - белые. Во втором ящике - 11 мячей, из которых 9 белых. Из каждого ящика вытаскивают случайным образом по два мяча. Какова вероятность того, что все мячи белые? Какова вероятность того, что ровно два мяча белые? Какова вероятность того, что хотя бы один мяч белый?\nКакова вероятность того, что все мячи белые?\n0.3054545454545455\nКакова вероятность того, что ровно два мяча белые?\n0.20484848484848486\nКакова вероятность того, что хотя бы один мяч белый?\n0.9987878787878788\n","name":"stdout"}]},{"metadata":{},"cell_type":"markdown","source":""},{"metadata":{},"cell_type":"markdown","source":"You can also get this tutorial and run it on your laptop:\n\n    git clone https://github.com/ipython/ipython-in-depth\n\nInstall IPython and Jupyter:\n\nwith [conda](https://www.anaconda.com/download):\n\n    conda install ipython jupyter\n\nwith pip:\n\n    # first, always upgrade pip!\n    pip install --upgrade pip\n    pip install --upgrade ipython jupyter\n\nStart the notebook in the tutorial directory:\n\n    cd ipython-in-depth\n    jupyter notebook"}],"metadata":{"kernelspec":{"name":"python3","display_name":"Python 3","language":"python"},"language_info":{"name":"python","version":"3.6.11","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"}},"nbformat":4,"nbformat_minor":2}
